<%- include("../../views/pratials/admin/header") %>
<head>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
   .error-message{
       color: red;
   }


       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }


       .thumbnail {
           margin-right: 10px;


       }
</style>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Add New Product</h2>
               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">
                   <div class="card-body">
                       <form method="post" action="/admin/addProducts" enctype="multipart/form-data"
                           onsubmit="return validateForm()
">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Type here" name="productName" class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        
                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="text" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity</label>
                                    <input placeholder="" name="quantity" type="text" class="form-control border">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row gx-2">
                                <div class="col-sm-6 mb-3">
                                    <label class="form-label">Brand</label>
                                    <select class="form-select border" style="width: 150px;" name="brand">
                                        <% if (brand && brand.length > 0) { %>
                                            <% for (let i = 0; i < brand.length; i++) { %>
                                                <option value="<%= brand[i].brandName %>"><%= brand[i].brandName %></option>
                                            <% } %>
                                        <% } else { %>
                                            <option disabled>No brands available</option>
                                        <% } %>
                                    </select>
                                    <div id="category-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Add Color Field -->
                        <div class="mb-4">
                            <label for="weights" class="form-label">Weights</label>
                            <div id="weights-container">
                                <div class="weight-item mb-2">
                                    <input type="text" placeholder="Type weight here" name="weights[]" class="form-control border">
                                </div>
                            </div>
                            <button type="button" onclick="addWeight()" class="btn btn-sm btn-primary mt-2">Add Weight</button>
                            <div id="weights-error" class="error-message"></div>
                        </div>
                        
                        <div class="mb-4">
                            <label for="flavours" class="form-label">Flavors</label>
                            <div id="flavours-container">
                                <div class="flavours-item mb-2">
                                    <input type="text" placeholder="Type flavours here" name="flavours[]" class="form-control border">
                                </div>
                            </div>
                            <button type="button" onclick="addFlavours()" class="btn btn-sm btn-primary mt-2">Add Flavours</button>
                            <div id="flavours-error" class="error-message"></div>
                        </div>
                        
                        
                           <div class="row">
                              
                                                           
                           </div>
                           <div class="card mb-4">
                               <div class="card-body">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                           <select class="form-select border" style="width: 150px;" name="category">
                                            <% if (cat && cat.length > 0) { %>
                                                <% cat.forEach(category => { %>
                                                  <option value="<%= category.name %>"><%= category.name %></option>
                                                <% }) %>
                                              <% } else { %>
                                                <option disabled>No categories available</option>
                                              <% } %>
                                                   
                                           </select>
                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                               <div class="border row">
                                   <div id="addedImagesContainer" class="thumbnails-container"></div>
                               </div>
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView1">
                                                                   <input class="form-control" type="file" name="images" id="input1"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage1(event), viewImage(event, 1)">
                                                                       <div id="images-error" class="error-message"></div>
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg1" alt="">
                                                                   <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView2">


                                                                   <input class="form-control" type="file" name="images" id="input2"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage2(event),viewImage(event, 2)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg2" alt="">
                                                                   <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView3">


                                                                   <input class="form-control" type="file" name="images" id="input3"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage3(event),viewImage(event, 3)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg3" alt="">
                                                                   <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView4">


                                                          
                                                                   <input class="form-control" type="file" name="images" id="input4"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage4(event),viewImage(event, 4)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg4" alt="">
                                                                   <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                          
                                                       </div>
                           </div>
                           <div>
                               <button class="btn btn-md rounded font-sm hover-up"  type="submit" onclick="validateAndSubmit()
">Publish</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
   </section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>




<script>

function validateAndSubmit() {
  if (validateForm()) {
    document.forms[0].submit();
  }
}

function validateForm() {
  console.log("validate form");
  clearErrorMessages();
  
  const name = document.getElementsByName('productName')[0].value;
  const description = document.getElementsByName('description')[0].value;
  const regularPrice = document.getElementsByName('regularPrice')[0].value;
  const salePrice = document.getElementsByName('salePrice')[0].value;
  const quantity = document.getElementsByName('quantity')[0].value;
  const category = document.getElementsByName('category')[0]?.value || "";
  const images = document.getElementById('input1').files;

  let isValid = true;


  // Validate product name
  if (name.trim() === "") {
    displayErrorMessage('productName-error', 'Please enter a product name.');
    isValid = false;
  }

  // Validate description
  if (description.trim() === "") {
    displayErrorMessage('description-error', 'Please enter a product description.');
    isValid = false;
  }

  // Validate regular price
  if (!/^\d+(\.\d{1,2})?$/.test(regularPrice) || parseFloat(regularPrice) <= 0) {
    displayErrorMessage('regularPrice-error', 'Please enter a valid, positive regular price.');
    isValid = false;
  }

  // Validate sale price
  if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) <= 0) {
    displayErrorMessage('salePrice-error', 'Please enter a valid, positive sale price.');
    isValid = false;
  }

  // Check if sale price is less than regular price
  if (parseFloat(salePrice) >= parseFloat(regularPrice)) {
    displayErrorMessage('salePrice-error', 'Sale price must be less than regular price.');
    isValid = false;
  }

  // Validate quantity
  if (!/^\d+$/.test(quantity) || parseInt(quantity) <= 0) {
    displayErrorMessage('quantity-error', 'Please enter a valid, positive quantity.');
    isValid = false;
  }

  // Validate category
  if (category.trim() === "") {
    displayErrorMessage('category-error', 'Please select a category.');
    isValid = false;
  }

  // Validate images
  if (images.length === 0) {
    displayErrorMessage("images-error", 'Please select at least one image.');
    isValid = false;
  }

  return isValid;
}
function addWeight() {
    const weightsContainer = document.getElementById('weights-container');
    const newWeight = document.createElement('div');
    newWeight.className = 'weight-item mb-2';
    newWeight.innerHTML = `
        <input type="text" placeholder="Type weight here" name="weights[]" class="form-control border">
        <button type="button" onclick="removeInput(this)" class="btn btn-sm btn-danger mt-2">Remove</button>
    `;
    weightsContainer.appendChild(newWeight);
}

function addFlavours() {
    const flavoursContainer = document.getElementById('flavours-container');
    const newFlavour = document.createElement('div');
    newFlavour.className = 'flavours-item mb-2';
    newFlavour.innerHTML = `
        <input type="text" placeholder="Type flavours here" name="flavours[]" class="form-control border">
        <button type="button" onclick="removeInput(this)" class="btn btn-sm btn-danger mt-2">Remove</button>
    `;
    flavoursContainer.appendChild(newFlavour);
}

function removeInput(button) {
    button.parentElement.remove();
}


function displayErrorMessage(elementId, message) {
  const errorElement = document.getElementById(elementId);
  errorElement.innerText = message;
  errorElement.style.display = "block";
}

function clearErrorMessages() {
  const errorElements = document.getElementsByClassName('error-message');
  Array.from(errorElements).forEach(element => {
    element.innerText = '';
  });
}

    
       
    
    function viewImage1(event) {
               document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage2(event) {
               document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage3(event) {
               document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage4(event) {
               document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
           }
        
    
           function viewImage(event, index) {
               let input = event.target;
               let reader = new FileReader();
               reader.onload = function () {
                   let dataURL = reader.result;
                   let image = document.getElementById('imgView' + index);
                   image.src = dataURL;
                   let cropper = new Cropper(image, {
                       aspectRatio: 1,
                       viewMode: 1,
                       guides: true,
                       background: false,
                       autoCropArea: 1,
                       zoomable: true
                   });
                   let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                   cropperContainer.style.display = 'block';
                   let saveButton = document.querySelector('#saveButton' + index);
                   saveButton.addEventListener('click', async function () {
                       let croppedCanvas = cropper.getCroppedCanvas();
                       let croppedImage = document.getElementById("croppedImg" + index);
                       croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                       let timestamp = new Date().getTime();
                       let fileName = `cropped-img-${timestamp}-${index}.png`;
                       await croppedCanvas.toBlob(blob => {
                           let input = document.getElementById('input' + index);
                           let imgFile = new File([blob], fileName, blob)
                           const fileList = new DataTransfer();
                           fileList.items.add(imgFile);
                           input.files = fileList.files
                       });
                       cropperContainer.style.display = 'none';
                   });
               };
               reader.readAsDataURL(input.files[0]);
           }
    
    
           const selectedImages = [];
       document.getElementById("imageInput").addEventListener("change", handleFileSelect);
    
    
           function handleFileSelect(event) {
               const addedImagesContainer = document.getElementById("addedImagesContainer");
               addedImagesContainer.innerHTML = "";
               const files = event.target.files;
               for (let i = 0; i < files.length; i++) {
                   const file = files[i];
                   selectedImages.push(file);
                   const thumbnail = document.createElement("div");
                   thumbnail.classList.add("thumbnail");
                   const img = document.createElement("img");
                   img.src = URL.createObjectURL(file);
                   img.alt = "thumbnail";
                   img.style.width = "50px";
                   img.style.height = "auto";
                   const removeIcon = document.createElement("span");
                   removeIcon.classList.add("remove-icon");
                   removeIcon.innerHTML = "&times;";
                   removeIcon.addEventListener("click", function () {
                       const index = selectedImages.indexOf(file);
                       if (index !== -1) {
                           selectedImages.splice(index, 1);
                       }
                       thumbnail.remove();
                   });
                   thumbnail.appendChild(img);
                   thumbnail.appendChild(removeIcon);
                   addedImagesContainer.appendChild(thumbnail);
               }
           };
        
          function displayErrorMessage(elementId, message) {
              var errorElement = document.getElementById(elementId);
              errorElement.innerText = message;
              errorElement.style.display = "block";
          }
  
  
          function clearErrorMessages() {
              const errorElements = document.getElementsByClassName('error-message');
              Array.from(errorElements).forEach(element => {
                  element.innerText = '';
              });
              const errorMessage = document.getElementById('errorMessage');
     
          }


          console.log(validateForm());

</script>
     
<%- include("../../views/pratials/admin/footer") %>